name: Release App

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Fetch Sources
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Setup Gradle Cache        
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Restore Keystore File
      run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > ynsrc.keystore
      
    - name: Restore gradle.properties
      run: |
        mkdir -p ~/.gradle/
        echo "KEYSTORE_FILE=../ynsrc.keystore" >> ~/.gradle/gradle.properties
        echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> ~/.gradle/gradle.properties
        echo "SIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> ~/.gradle/gradle.properties
        echo "SIGNING_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}" >> ~/.gradle/gradle.properties
      shell: bash
    
    - name: Generate Version Name
      run: echo "VERSION_NAME=${GITHUB_SHA::7}" >> $GITHUB_ENV
    
    - name: Bump Version
      uses: chkfung/android-version-actions@v1.2.2
      with:
        gradlePath: app/build.gradle.kts
        versionCode: ${{ github.run_number }}
        versionName: ${{ env.VERSION_NAME }}

    - name: Grant Execute Permission
      run: chmod +x gradlew

    - name: Build Release APK
      run: ./gradlew --no-daemon
        -PKEYSTORE_FILE="../ynsrc.keystore"
        -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
        -PSIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}
        -PSIGNING_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}
        app:assembleRelease

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION_NAME }}
        release_name: Release ${{ env.VERSION_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release APK
      id: upload_release_asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: ynsrc_ex${{ github.run_number }}.apk
        asset_content_type: application/zip
